//
// File generated by C:\ROOT-5.34\\bin\rootcint.exe at Mon Aug 19 14:38:56 2013

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME SerialComDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "SerialComDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void SerialCom_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_SerialCom(void *p = 0);
   static void *newArray_SerialCom(Long_t size, void *p);
   static void delete_SerialCom(void *p);
   static void deleteArray_SerialCom(void *p);
   static void destruct_SerialCom(void *p);
   static void streamer_SerialCom(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::SerialCom*)
   {
      ::SerialCom *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::SerialCom >(0);
      static ::ROOT::TGenericClassInfo 
         instance("SerialCom", ::SerialCom::Class_Version(), "./SerialCom.h", 27,
                  typeid(::SerialCom), DefineBehavior(ptr, ptr),
                  &::SerialCom::Dictionary, isa_proxy, 0,
                  sizeof(::SerialCom) );
      instance.SetNew(&new_SerialCom);
      instance.SetNewArray(&newArray_SerialCom);
      instance.SetDelete(&delete_SerialCom);
      instance.SetDeleteArray(&deleteArray_SerialCom);
      instance.SetDestructor(&destruct_SerialCom);
      instance.SetStreamerFunc(&streamer_SerialCom);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::SerialCom*)
   {
      return GenerateInitInstanceLocal((::SerialCom*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::SerialCom*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *SerialCom::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *SerialCom::Class_Name()
{
   return "SerialCom";
}

//______________________________________________________________________________
const char *SerialCom::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::SerialCom*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int SerialCom::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::SerialCom*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void SerialCom::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::SerialCom*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *SerialCom::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::SerialCom*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void SerialCom::Streamer(TBuffer &R__b)
{
   // Stream an object of class SerialCom.

   UInt_t R__s, R__c;
   if (R__b.IsReading()) {
      Version_t R__v = R__b.ReadVersion(&R__s, &R__c); if (R__v) { }
      R__b >> con_stat;
      R__b >> timeBetweenSendAndReciev;
      R__b >> TimeOut_;
      R__b >> SizeOfReadString;
      { TString R__str; R__str.Streamer(R__b); _port = R__str.Data(); }
      { TString R__str; R__str.Streamer(R__b); terminateCommand = R__str.Data(); }
      R__b >> _baudRate;
      R__b >> _ByteSize;
      R__b >> _StopBits;
      R__b >> _Parity;
      R__b >> SerialMutex;
      R__b.CheckByteCount(R__s, R__c, SerialCom::IsA());
   } else {
      R__c = R__b.WriteVersion(SerialCom::IsA(), kTRUE);
      R__b << con_stat;
      R__b << timeBetweenSendAndReciev;
      R__b << TimeOut_;
      R__b << SizeOfReadString;
      { TString R__str = _port.c_str(); R__str.Streamer(R__b);}
      { TString R__str = terminateCommand.c_str(); R__str.Streamer(R__b);}
      R__b << _baudRate;
      R__b << _ByteSize;
      R__b << _StopBits;
      R__b << _Parity;
      R__b << SerialMutex;
      R__b.SetByteCount(R__c, kTRUE);
   }
}

//______________________________________________________________________________
void SerialCom::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class SerialCom.
      typedef ::SerialCom msvc_bug_workaround;
      TClass *R__cl = msvc_bug_workaround::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "con_stat", &con_stat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "timeBetweenSendAndReciev", &timeBetweenSendAndReciev);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "TimeOut_", &TimeOut_);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "SizeOfReadString", &SizeOfReadString);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_port", (void*)&_port);
      R__insp.InspectMember("string", (void*)&_port, "_port.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "terminateCommand", (void*)&terminateCommand);
      R__insp.InspectMember("string", (void*)&terminateCommand, "terminateCommand.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_baudRate", &_baudRate);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_ByteSize", &_ByteSize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_StopBits", &_StopBits);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "_Parity", &_Parity);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*SerialMutex", &SerialMutex);
}

namespace ROOT {
   // Wrappers around operator new
   static void *new_SerialCom(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::SerialCom : new ::SerialCom;
   }
   static void *newArray_SerialCom(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::SerialCom[nElements] : new ::SerialCom[nElements];
   }
   // Wrapper around operator delete
   static void delete_SerialCom(void *p) {
      delete ((::SerialCom*)p);
   }
   static void deleteArray_SerialCom(void *p) {
      delete [] ((::SerialCom*)p);
   }
   static void destruct_SerialCom(void *p) {
      typedef ::SerialCom current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_SerialCom(TBuffer &buf, void *obj) {
      ((::SerialCom*)obj)->::SerialCom::Streamer(buf);
   }
} // end of namespace ROOT for class ::SerialCom

/********************************************************
* SerialComDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

extern "C" void G__cpp_reset_tagtableSerialComDict();

extern "C" void G__set_cpp_environmentSerialComDict() {
  G__add_ipath("../../include");
  G__cpp_reset_tagtableSerialComDict();
}
#include <new>
extern "C" int G__cpp_dllrevSerialComDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* SerialCom */
static int G__SerialComDict_329_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SerialCom* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SerialCom[n];
     } else {
       p = new((void*) gvp) SerialCom[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SerialCom;
     } else {
       p = new((void*) gvp) SerialCom;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SerialComDictLN_SerialCom));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SerialComDict_329_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SerialCom* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 5:
     //m: 5
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SerialCom(
(const char*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
     } else {
       p = new((void*) gvp) SerialCom(
(const char*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4]));
     }
     break;
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SerialCom(
(const char*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) SerialCom(
(const char*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SerialCom(
(const char*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) SerialCom(
(const char*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SerialCom((const char*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) SerialCom((const char*) G__int(libp->para[0]), (int) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new SerialCom((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) SerialCom((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SerialComDictLN_SerialCom));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SerialComDict_329_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SerialCom*) G__getstructoffset())->connect());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SerialComDict_329_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SerialCom*) G__getstructoffset())->connect((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SerialComDict_329_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SerialCom*) G__getstructoffset())->connect((const char*) G__int(libp->para[0]), (int) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SerialComDict_329_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SerialCom*) G__getstructoffset())->connect((const char*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SerialComDict_329_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SerialCom*) G__getstructoffset())->connect((const char*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SerialComDict_329_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SerialCom*) G__getstructoffset())->connect((const char*) G__int(libp->para[0]), (int) G__int(libp->para[1])
, (int) G__int(libp->para[2]), (int) G__int(libp->para[3])
, (int) G__int(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SerialComDict_329_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SerialCom*) G__getstructoffset())->disconnect());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SerialComDict_329_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SerialCom*) G__getstructoffset())->send(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SerialComDict_329_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((SerialCom*) G__getstructoffset())->query(*((string*) G__int(libp->para[0])));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SerialComDict_329_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SerialCom*) G__getstructoffset())->query_cout(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SerialComDict_329_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((SerialCom*) G__getstructoffset())->query_TString(*((string*) G__int(libp->para[0])));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SerialComDict_329_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((SerialCom*) G__getstructoffset())->read_str();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SerialComDict_329_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         TString* pobj;
         TString xobj = ((SerialCom*) G__getstructoffset())->read_TString();
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SerialComDict_329_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SerialCom*) G__getstructoffset())->set_Port((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SerialComDict_329_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SerialCom*) G__getstructoffset())->set_baudRate((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SerialComDict_329_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SerialCom*) G__getstructoffset())->set_ByteSize((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SerialComDict_329_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SerialCom*) G__getstructoffset())->set_StopBits((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SerialComDict_329_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((SerialCom*) G__getstructoffset())->set_Parity((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SerialComDict_329_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SerialCom*) G__getstructoffset())->show_errors();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SerialComDict_329_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SerialCom*) G__getstructoffset())->addError(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SerialComDict_329_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SerialCom*) G__getstructoffset())->setTerminateCommand(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SerialComDict_329_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((SerialCom*) G__getstructoffset())->getPort();
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SerialComDict_329_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) SerialCom::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SerialComDict_329_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SerialCom::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SerialComDict_329_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) SerialCom::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SerialComDict_329_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      SerialCom::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SerialComDict_329_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const SerialCom*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SerialComDict_329_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SerialCom*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SerialComDict_329_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SerialCom*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SerialComDict_329_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((SerialCom*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SerialComDict_329_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SerialCom::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SerialComDict_329_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SerialCom::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SerialComDict_329_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) SerialCom::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__SerialComDict_329_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) SerialCom::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__SerialComDict_329_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   SerialCom* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new SerialCom(*(SerialCom*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__SerialComDictLN_SerialCom));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef SerialCom G__TSerialCom;
static int G__SerialComDict_329_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (SerialCom*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((SerialCom*) (soff+(sizeof(SerialCom)*i)))->~G__TSerialCom();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (SerialCom*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((SerialCom*) (soff))->~G__TSerialCom();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__SerialComDict_329_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   SerialCom* dest = (SerialCom*) G__getstructoffset();
   *dest = *(SerialCom*) libp->para[0].ref;
   const SerialCom& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* SerialCom */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncSerialComDict {
 public:
  G__Sizep2memfuncSerialComDict(): p(&G__Sizep2memfuncSerialComDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncSerialComDict::*p)();
};

size_t G__get_sizep2memfuncSerialComDict()
{
  G__Sizep2memfuncSerialComDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceSerialComDict() {

   /* Setting up class inheritance */
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableSerialComDict() {

   /* Setting up typedef entry */
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("iterator<iterator_traits<string::iterator>::iterator_category,iterator_traits<string::iterator>::value_type,iterator_traits<string::iterator>::difference_type,iterator_traits<string::iterator>::pointer,iterator_traits<string::iterator>::reference>",117,G__get_linked_tagnum(&G__SerialComDictLN_iteratorlErandom_access_iterator_tagcOcharcOlongcOcharmUcOcharaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,char>",117,G__get_linked_tagnum(&G__SerialComDictLN_iteratorlErandom_access_iterator_tagcOcharcOlongcOcharmUcOcharaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,char,long>",117,G__get_linked_tagnum(&G__SerialComDictLN_iteratorlErandom_access_iterator_tagcOcharcOlongcOcharmUcOcharaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,char,long,char*>",117,G__get_linked_tagnum(&G__SerialComDictLN_iteratorlErandom_access_iterator_tagcOcharcOlongcOcharmUcOcharaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<iterator_traits<string::const_iterator>::iterator_category,iterator_traits<string::const_iterator>::value_type,iterator_traits<string::const_iterator>::difference_type,iterator_traits<string::const_iterator>::pointer,iterator_traits<string::const_iterator>::reference>",117,G__get_linked_tagnum(&G__SerialComDictLN_iteratorlErandom_access_iterator_tagcOcharcOlongcOcharmUcOcharaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__SerialComDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__SerialComDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__SerialComDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SerialComDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>::iterator_category,iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>::value_type,iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>::difference_type,iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>::pointer,iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>::reference>",117,G__get_linked_tagnum(&G__SerialComDictLN_iteratorlErandom_access_iterator_tagcOROOTcLcLTSchemaHelpercOlongcOROOTcLcLTSchemaHelpermUcOROOTcLcLTSchemaHelperaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__SerialComDictLN_iteratorlErandom_access_iterator_tagcOROOTcLcLTSchemaHelpercOlongcOROOTcLcLTSchemaHelpermUcOROOTcLcLTSchemaHelperaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,ROOT::TSchemaHelper,long>",117,G__get_linked_tagnum(&G__SerialComDictLN_iteratorlErandom_access_iterator_tagcOROOTcLcLTSchemaHelpercOlongcOROOTcLcLTSchemaHelpermUcOROOTcLcLTSchemaHelperaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,ROOT::TSchemaHelper,long,ROOT::TSchemaHelper*>",117,G__get_linked_tagnum(&G__SerialComDictLN_iteratorlErandom_access_iterator_tagcOROOTcLcLTSchemaHelpercOlongcOROOTcLcLTSchemaHelpermUcOROOTcLcLTSchemaHelperaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__SerialComDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLconst_iteratorgR),0,G__get_linked_tagnum(&G__SerialComDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::const_iterator>::iterator_category,iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::const_iterator>::value_type,iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::const_iterator>::difference_type,iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::const_iterator>::pointer,iterator_traits<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::const_iterator>::reference>",117,G__get_linked_tagnum(&G__SerialComDictLN_iteratorlErandom_access_iterator_tagcOROOTcLcLTSchemaHelpercOlongcOROOTcLcLTSchemaHelpermUcOROOTcLcLTSchemaHelperaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__SerialComDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__SerialComDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__SerialComDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SerialComDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>::iterator_category,iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>::value_type,iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>::difference_type,iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>::pointer,iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>::reference>",117,G__get_linked_tagnum(&G__SerialComDictLN_iteratorlErandom_access_iterator_tagcOTVirtualArraymUcOlongcOTVirtualArraymUmUcOTVirtualArraymUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,TVirtualArray*>",117,G__get_linked_tagnum(&G__SerialComDictLN_iteratorlErandom_access_iterator_tagcOTVirtualArraymUcOlongcOTVirtualArraymUmUcOTVirtualArraymUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,TVirtualArray*,long>",117,G__get_linked_tagnum(&G__SerialComDictLN_iteratorlErandom_access_iterator_tagcOTVirtualArraymUcOlongcOTVirtualArraymUmUcOTVirtualArraymUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,TVirtualArray*,long,TVirtualArray**>",117,G__get_linked_tagnum(&G__SerialComDictLN_iteratorlErandom_access_iterator_tagcOTVirtualArraymUcOlongcOTVirtualArraymUmUcOTVirtualArraymUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__SerialComDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLconst_iteratorgR),0,G__get_linked_tagnum(&G__SerialComDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::const_iterator>::iterator_category,iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::const_iterator>::value_type,iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::const_iterator>::difference_type,iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::const_iterator>::pointer,iterator_traits<vector<TVirtualArray*,allocator<TVirtualArray*> >::const_iterator>::reference>",117,G__get_linked_tagnum(&G__SerialComDictLN_iteratorlErandom_access_iterator_tagcOTVirtualArraymUcOlongcOTVirtualArraymUmUcOTVirtualArraymUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<UInt_t>",117,G__get_linked_tagnum(&G__SerialComDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__SerialComDictLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TString>",117,G__get_linked_tagnum(&G__SerialComDictLN_vectorlETStringcOallocatorlETStringgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__SerialComDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__SerialComDictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<iterator_traits<vector<TString,allocator<TString> >::iterator>::iterator_category,iterator_traits<vector<TString,allocator<TString> >::iterator>::value_type,iterator_traits<vector<TString,allocator<TString> >::iterator>::difference_type,iterator_traits<vector<TString,allocator<TString> >::iterator>::pointer,iterator_traits<vector<TString,allocator<TString> >::iterator>::reference>",117,G__get_linked_tagnum(&G__SerialComDictLN_iteratorlErandom_access_iterator_tagcOTStringcOlongcOTStringmUcOTStringaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,TString>",117,G__get_linked_tagnum(&G__SerialComDictLN_iteratorlErandom_access_iterator_tagcOTStringcOlongcOTStringmUcOTStringaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,TString,long>",117,G__get_linked_tagnum(&G__SerialComDictLN_iteratorlErandom_access_iterator_tagcOTStringcOlongcOTStringmUcOTStringaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<random_access_iterator_tag,TString,long,TString*>",117,G__get_linked_tagnum(&G__SerialComDictLN_iteratorlErandom_access_iterator_tagcOTStringcOlongcOTStringmUcOTStringaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__SerialComDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLconst_iteratorgR),0,G__get_linked_tagnum(&G__SerialComDictLN_vectorlETStringcOallocatorlETStringgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<iterator_traits<vector<TString,allocator<TString> >::const_iterator>::iterator_category,iterator_traits<vector<TString,allocator<TString> >::const_iterator>::value_type,iterator_traits<vector<TString,allocator<TString> >::const_iterator>::difference_type,iterator_traits<vector<TString,allocator<TString> >::const_iterator>::pointer,iterator_traits<vector<TString,allocator<TString> >::const_iterator>::reference>",117,G__get_linked_tagnum(&G__SerialComDictLN_iteratorlErandom_access_iterator_tagcOTStringcOlongcOTStringmUcOTStringaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* SerialCom */
static void G__setup_memvarSerialCom(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__SerialComDictLN_SerialCom));
   { SerialCom *p; p=(SerialCom*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->con_stat)-(long)(p)),105,0,0,-1,-1,-1,1,"con_stat=",0,"indicants whether the device is connected or not ");
   G__memvar_setup((void*)((long)(&p->timeBetweenSendAndReciev)-(long)(p)),107,0,0,-1,-1,-1,1,"timeBetweenSendAndReciev=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->TimeOut_)-(long)(p)),107,0,0,-1,-1,-1,1,"TimeOut_=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->SizeOfReadString)-(long)(p)),105,0,0,-1,-1,-1,1,"SizeOfReadString=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SerialComDictLN_string),-1,-1,4,"_port=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__SerialComDictLN_string),-1,-1,4,"terminateCommand=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_baudRate=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_ByteSize=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_StopBits=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"_Parity=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SerialComDictLN_TMutex),-1,-1,4,"SerialMutex=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__SerialComDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarSerialComDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncSerialCom(void) {
   /* SerialCom */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__SerialComDictLN_SerialCom));
   G__memfunc_setup("SerialCom",895,G__SerialComDict_329_0_1, 105, G__get_linked_tagnum(&G__SerialComDictLN_SerialCom), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SerialCom",895,G__SerialComDict_329_0_2, 105, G__get_linked_tagnum(&G__SerialComDictLN_SerialCom), -1, 0, 5, 1, 1, 0, 
"C - - 10 - port i - - 0 '9600' baudRate "
"i - - 0 '8' ByteSize i - - 0 '0' StopBits "
"i - - 0 '0' Parity", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("connect",746,G__SerialComDict_329_0_3, 105, -1, -1, 0, 0, 1, 1, 0, "", "connects if all variables are set", (void*) NULL, 0);
   G__memfunc_setup("connect",746,G__SerialComDict_329_0_4, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - port", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("connect",746,G__SerialComDict_329_0_5, 105, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - port i - - 0 - baudRate", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("connect",746,G__SerialComDict_329_0_6, 105, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - port i - - 0 - baudRate "
"i - - 0 - ByteSize", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("connect",746,G__SerialComDict_329_0_7, 105, -1, -1, 0, 4, 1, 1, 0, 
"C - - 10 - port i - - 0 - baudRate "
"i - - 0 - ByteSize i - - 0 - StopBits", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("connect",746,G__SerialComDict_329_0_8, 105, -1, -1, 0, 5, 1, 1, 0, 
"C - - 10 - port i - - 0 - baudRate "
"i - - 0 - ByteSize i - - 0 - StopBits "
"i - - 0 - Parity", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("disconnect",1066,G__SerialComDict_329_0_9, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("send",426,G__SerialComDict_329_0_10, 105, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - command", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("query",566,G__SerialComDict_329_0_11, 117, G__get_linked_tagnum(&G__SerialComDictLN_string), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - command", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("query_cout",1104,G__SerialComDict_329_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - command", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("query_TString",1376,G__SerialComDict_329_0_13, 117, G__get_linked_tagnum(&G__SerialComDictLN_TString), -1, 0, 1, 1, 1, 0, "u 'string' - 0 - command", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("read_str",852,G__SerialComDict_329_0_14, 117, G__get_linked_tagnum(&G__SerialComDictLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("read_TString",1222,G__SerialComDict_329_0_15, 117, G__get_linked_tagnum(&G__SerialComDictLN_TString), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_Port",848,G__SerialComDict_329_0_16, 105, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - port", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set_baudRate",1235,G__SerialComDict_329_0_17, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - baudRate", "checks if the baudRate value is possible. not jet implemented for linux", (void*) NULL, 0);
   G__memfunc_setup("set_ByteSize",1242,G__SerialComDict_329_0_18, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - byteSize", "checks if the byteSize value is possible. not jet implemented for linux", (void*) NULL, 0);
   G__memfunc_setup("set_StopBits",1251,G__SerialComDict_329_0_19, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - stopBits", "checks if the stopBits value is possible. not jet implemented for linux", (void*) NULL, 0);
   G__memfunc_setup("set_Parity",1060,G__SerialComDict_329_0_20, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - -", "checks if the parity value is possible. not jet implemented for linux", (void*) NULL, 0);
   G__memfunc_setup("show_errors",1213,G__SerialComDict_329_0_21, 121, -1, -1, 0, 0, 1, 1, 0, "", "displays the error list in the command line", (void*) NULL, 0);
   G__memfunc_setup("addError",819,G__SerialComDict_329_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - new_error", "adds new errors to the error list if _DEBUG is defined it will print the error", (void*) NULL, 0);
   G__memfunc_setup("setTerminateCommand",1972,G__SerialComDict_329_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - term", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPort",741,G__SerialComDict_329_0_24, 117, G__get_linked_tagnum(&G__SerialComDictLN_string), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("checkForUnsetValues",1956,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 0, 1, 4, 0, "", "checks if all values are set. if the value is 0 then its ok if negative then not. ", (void*) NULL, 0);
   G__memfunc_setup("_send",521,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 1, 1, 4, 0, "u 'string' - 0 - command", "this is the intern send function it is not multi thread save.", (void*) NULL, 0);
   G__memfunc_setup("_read",507,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__SerialComDictLN_string), -1, 0, 0, 1, 4, 0, "", "this is the intern read function it is not multi thread save.", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__SerialComDict_329_0_28, 85, G__get_linked_tagnum(&G__SerialComDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&SerialCom::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__SerialComDict_329_0_29, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SerialCom::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__SerialComDict_329_0_30, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&SerialCom::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__SerialComDict_329_0_31, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&SerialCom::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__SerialComDict_329_0_32, 85, G__get_linked_tagnum(&G__SerialComDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__SerialComDict_329_0_33, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__SerialComDict_329_0_34, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__SerialComDict_329_0_35, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__SerialComDict_329_0_36, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SerialCom::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__SerialComDict_329_0_37, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SerialCom::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__SerialComDict_329_0_38, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&SerialCom::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__SerialComDict_329_0_39, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&SerialCom::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("SerialCom", 895, G__SerialComDict_329_0_40, (int) ('i'), G__get_linked_tagnum(&G__SerialComDictLN_SerialCom), -1, 0, 1, 1, 1, 0, "u 'SerialCom' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~SerialCom", 1021, G__SerialComDict_329_0_41, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__SerialComDict_329_0_42, (int) ('u'), G__get_linked_tagnum(&G__SerialComDictLN_SerialCom), -1, 1, 1, 1, 1, 0, "u 'SerialCom' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncSerialComDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalSerialComDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcSerialComDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__SerialComDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__SerialComDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__SerialComDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__SerialComDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__SerialComDictLN_iteratorlErandom_access_iterator_tagcOcharcOlongcOcharmUcOcharaNgR = { "iterator<random_access_iterator_tag,char,long,char*,char&>" , 115 , -1 };
G__linked_taginfo G__SerialComDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR = { "vector<unsigned int,allocator<unsigned int> >" , 99 , -1 };
G__linked_taginfo G__SerialComDictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__SerialComDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__SerialComDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__SerialComDictLN_iteratorlErandom_access_iterator_tagcOROOTcLcLTSchemaHelpercOlongcOROOTcLcLTSchemaHelpermUcOROOTcLcLTSchemaHelperaNgR = { "iterator<random_access_iterator_tag,ROOT::TSchemaHelper,long,ROOT::TSchemaHelper*,ROOT::TSchemaHelper&>" , 115 , -1 };
G__linked_taginfo G__SerialComDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLconst_iteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::const_iterator>" , 99 , -1 };
G__linked_taginfo G__SerialComDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__SerialComDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__SerialComDictLN_iteratorlErandom_access_iterator_tagcOTVirtualArraymUcOlongcOTVirtualArraymUmUcOTVirtualArraymUaNgR = { "iterator<random_access_iterator_tag,TVirtualArray*,long,TVirtualArray**,TVirtualArray*&>" , 115 , -1 };
G__linked_taginfo G__SerialComDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLconst_iteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::const_iterator>" , 99 , -1 };
G__linked_taginfo G__SerialComDictLN_TMutex = { "TMutex" , 99 , -1 };
G__linked_taginfo G__SerialComDictLN_vectorlETStringcOallocatorlETStringgRsPgR = { "vector<TString,allocator<TString> >" , 99 , -1 };
G__linked_taginfo G__SerialComDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::iterator>" , 99 , -1 };
G__linked_taginfo G__SerialComDictLN_iteratorlErandom_access_iterator_tagcOTStringcOlongcOTStringmUcOTStringaNgR = { "iterator<random_access_iterator_tag,TString,long,TString*,TString&>" , 115 , -1 };
G__linked_taginfo G__SerialComDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLconst_iteratorgR = { "reverse_iterator<vector<TString,allocator<TString> >::const_iterator>" , 99 , -1 };
G__linked_taginfo G__SerialComDictLN_SerialCom = { "SerialCom" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableSerialComDict() {
  G__SerialComDictLN_TClass.tagnum = -1 ;
  G__SerialComDictLN_TBuffer.tagnum = -1 ;
  G__SerialComDictLN_TMemberInspector.tagnum = -1 ;
  G__SerialComDictLN_TString.tagnum = -1 ;
  G__SerialComDictLN_iteratorlErandom_access_iterator_tagcOcharcOlongcOcharmUcOcharaNgR.tagnum = -1 ;
  G__SerialComDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR.tagnum = -1 ;
  G__SerialComDictLN_string.tagnum = -1 ;
  G__SerialComDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__SerialComDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__SerialComDictLN_iteratorlErandom_access_iterator_tagcOROOTcLcLTSchemaHelpercOlongcOROOTcLcLTSchemaHelpermUcOROOTcLcLTSchemaHelperaNgR.tagnum = -1 ;
  G__SerialComDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLconst_iteratorgR.tagnum = -1 ;
  G__SerialComDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__SerialComDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__SerialComDictLN_iteratorlErandom_access_iterator_tagcOTVirtualArraymUcOlongcOTVirtualArraymUmUcOTVirtualArraymUaNgR.tagnum = -1 ;
  G__SerialComDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLconst_iteratorgR.tagnum = -1 ;
  G__SerialComDictLN_TMutex.tagnum = -1 ;
  G__SerialComDictLN_vectorlETStringcOallocatorlETStringgRsPgR.tagnum = -1 ;
  G__SerialComDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__SerialComDictLN_iteratorlErandom_access_iterator_tagcOTStringcOlongcOTStringmUcOTStringaNgR.tagnum = -1 ;
  G__SerialComDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLconst_iteratorgR.tagnum = -1 ;
  G__SerialComDictLN_SerialCom.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableSerialComDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__SerialComDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__SerialComDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__SerialComDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__SerialComDictLN_TString);
   G__get_linked_tagnum_fwd(&G__SerialComDictLN_iteratorlErandom_access_iterator_tagcOcharcOlongcOcharmUcOcharaNgR);
   G__get_linked_tagnum_fwd(&G__SerialComDictLN_vectorlEunsignedsPintcOallocatorlEunsignedsPintgRsPgR);
   G__get_linked_tagnum_fwd(&G__SerialComDictLN_string);
   G__get_linked_tagnum_fwd(&G__SerialComDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__SerialComDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__SerialComDictLN_iteratorlErandom_access_iterator_tagcOROOTcLcLTSchemaHelpercOlongcOROOTcLcLTSchemaHelpermUcOROOTcLcLTSchemaHelperaNgR);
   G__get_linked_tagnum_fwd(&G__SerialComDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLconst_iteratorgR);
   G__get_linked_tagnum_fwd(&G__SerialComDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__SerialComDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__SerialComDictLN_iteratorlErandom_access_iterator_tagcOTVirtualArraymUcOlongcOTVirtualArraymUmUcOTVirtualArraymUaNgR);
   G__get_linked_tagnum_fwd(&G__SerialComDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLconst_iteratorgR);
   G__get_linked_tagnum_fwd(&G__SerialComDictLN_TMutex);
   G__get_linked_tagnum_fwd(&G__SerialComDictLN_vectorlETStringcOallocatorlETStringgRsPgR);
   G__get_linked_tagnum_fwd(&G__SerialComDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__SerialComDictLN_iteratorlErandom_access_iterator_tagcOTStringcOlongcOTStringmUcOTStringaNgR);
   G__get_linked_tagnum_fwd(&G__SerialComDictLN_reverse_iteratorlEvectorlETStringcOallocatorlETStringgRsPgRcLcLconst_iteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__SerialComDictLN_SerialCom),sizeof(SerialCom),-1,34048,"needed for the ROOT dict",G__setup_memvarSerialCom,G__setup_memfuncSerialCom);
}
extern "C" void G__cpp_setupSerialComDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupSerialComDict()");
  G__set_cpp_environmentSerialComDict();
  G__cpp_setup_tagtableSerialComDict();

  G__cpp_setup_inheritanceSerialComDict();

  G__cpp_setup_typetableSerialComDict();

  G__cpp_setup_memvarSerialComDict();

  G__cpp_setup_memfuncSerialComDict();
  G__cpp_setup_globalSerialComDict();
  G__cpp_setup_funcSerialComDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncSerialComDict();
  return;
}
class G__cpp_setup_initSerialComDict {
  public:
    G__cpp_setup_initSerialComDict() { G__add_setup_func("SerialComDict",(G__incsetup)(&G__cpp_setupSerialComDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initSerialComDict() { G__remove_setup_func("SerialComDict"); }
};
G__cpp_setup_initSerialComDict G__cpp_setup_initializerSerialComDict;

